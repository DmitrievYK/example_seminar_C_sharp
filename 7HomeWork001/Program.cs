// Задача 58: Задайте две матрицы. Напишите программу, которая будет находить произведение двух матриц.
// Например, даны 2 матрицы:
// 2 4 | 3 4
// 3 2 | 3 3
// Результирующая матрица будет:
// 18 20
// 15 18


// int[,] matrixA = {{2, 4}, {3, 4}};
// int[,] matrixB = {{3, 2}, {3, 3}}; 
int[,] matrixA = {{2, 4, 1}, {1, 3, 7}, {8, 3, 5}};
int[,] matrixB = {{3, 4, 3}, {2, 2, 6}, {5, 2, 7}}; 


void PrintMatrix(int[,] matrix)
{
    for (int i = 0; i < matrix.GetLength(0); i++) 
    {
        for (int j = 0; j < matrix.GetLength(1); j++)
        {
            Console.Write(matrix[i,j] + " ");
        }
        Console.WriteLine();
    }
}
 
int[,] MultiplicationMatrix(int[,] matrixA, int[,] matrixB)
{
    int[,] resultMatrix = new int[matrixA.GetLength(0), matrixA.GetLength(1)];
    for (int i = 0; i < resultMatrix.GetLength(0); i++)
    {
        for (int j = 0; j < resultMatrix.GetLength(1); j++)
        {
            int sum = 0;
            for (int k = 0; k < resultMatrix.GetLength(1); k++)
            {
                sum += matrixA[i, k] * matrixB[k, j];
            }
            resultMatrix[i, j] = sum;
        }
    }
    return resultMatrix;
}

Console.WriteLine("Результирующая матрица: ");
PrintMatrix(MultiplicationMatrix(matrixA, matrixB));



// Конечно, я могу помочь вам решить эту задачу! Вот пример кода метода,
//  который перемножает две матрицы и возвращает результирующую матрицу:

// ```csharp
// public int[,] MultiplyMatrices(int[,] matrix1, int[,] matrix2)
// {
// int rows1 = matrix1.GetLength(0);
// int columns1 = matrix1.GetLength(1);
// int columns2 = matrix2.GetLength(1);

// int[,] result = new int[rows1, columns2];

// for (int i = 0; i < rows1; i++)
// {
// for (int j = 0; j < columns2; j++)
// {
// int sum = 0;

// for (int k = 0; k < columns1; k++)
// {
// sum += matrix1[i, k] * matrix2[k, j];
// }

// result[i, j] = sum;
// }
// }

// return result;
// }
// ```

// В этом примере мы сначала определяем размеры матриц `matrix1` и `matrix2`, 
// а затем создаем новую матрицу `result` с размером, соответствующим количеству строк первой матрицы и столбцов второй матрицы.
//  Затем мы используем вложенные циклы для прохода по каждому элементу `result` и вычисления суммы произведений соответствующих элементов из `matrix1` и `matrix2`.

// Затем мы возвращаем полученную результирующую матрицу.

// Вы можете вызвать этот метод следующим образом:

// ```csharp
// int[,] matrix1 = new int[,] { { 1, 2 }, { 3, 4 } };
// int[,] matrix2 = new int[,] { { 5, 6 }, { 7, 8 } };

// int[,] result = MultiplyMatrices(matrix1, matrix2);

// // Вывод результирующей матрицы
// for (int i = 0; i < result.GetLength(0); i++)
// {
// for (int j = 0; j < result.GetLength(1); j++)
// {
// Console.Write(result[i, j] + " ");
// }
// Console.WriteLine();
// }
// ```

// В этом примере мы создаем две матрицы `matrix1` и `matrix2` и вызываем метод `MultiplyMatrices` для их умножения.
//  Затем мы выводим результирующую матрицу.

// Надеюсь, это поможет вам решить вашу задачу! 
// Если у вас возникнут еще вопросы, пожалуйста, не стесняйтесь задавать.

// ***************************************************************************
// ChatGPT (15:17:53): Определенно! Давайте подробнее разберем третий вложенный цикл, 
// где мы проходим по каждому элементу `result` для вычисления суммы произведений элементов матриц `matrix1` и `matrix2`.

// ```csharp
// for (int i = 0; i < rows1; i++)
// {
// for (int j = 0; j < columns2; j++)
// {
// int sum = 0;

// for (int k = 0; k < columns1; k++)
// {
// sum += matrix1[i, k] * matrix2[k, j];
// }

// result[i, j] = sum;
// }
// }
// ```

// Давайте разберем каждый шаг:

// 1. Внешний цикл `i` используется для итерации по строкам матрицы `matrix1` и результирующей матрицы `result`.

// 2. Во внутреннем цикле `j` мы итерируемся по столбцам результирующей матрицы `result`.

// 3. Мы создаем переменную `sum`, которая будет хранить сумму произведений элементов.

// 4. В третьем вложенном цикле `k` мы проходим по столбцам первой матрицы `matrix1` и элементам второй матрицы `matrix2`. 
// Здесь мы берем элемент `matrix1[i, k]` из i-й строки и k-го столбца первой матрицы `matrix1`, и элемент `matrix2[k, j]` 
// из k-го столбца и j-й строки второй матрицы `matrix2`.

// 5. Мы умножаем элементы `matrix1[i, k]` и `matrix2[k, j]` и добавляем их к переменной `sum`. 
// Таким образом, мы последовательно умножаем каждый элемент строки из `matrix1` 
// на соответствующий элемент столбца из `matrix2` и накапливаем сумму произведений в `sum`.

// 6. После завершения внутреннего цикла `k` присваиваем полученную сумму `sum` элементу `result[i, j]`, 
// чтобы записать результат умножения в соответствующую ячейку результирующей матрицы.

// 7. Повторяем шаги 2-6 для каждого элемента результирующей матрицы `result`,
//  завершая вычисления для всех строк и столбцов.

// Когда внешние и внутренние циклы завершены, в `result` будет храниться результирующая матрица,
//  полученная путем перемножения матриц `matrix1` и `matrix2`.

// Надеюсь, это помогает вам лучше понять то, как работает процесс умножения матриц. 
// Если у вас есть еще вопросы, пожалуйста, не стесняйтесь задавать!